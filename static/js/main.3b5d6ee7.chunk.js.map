{"version":3,"sources":["helpers.js","components/Square.js","components/Board.js","components/Game.js","App.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","console","log","style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","map","square","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","winner","timeInHistory","slice","current","_step","move","destination","step","App","ReactDOM","render","document","getElementById"],"mappings":"iKAAO,SAASA,EAAgBC,GAW9B,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,KASTG,QAAQC,IAAIT,EANI,CACd,KAAM,KAAM,KACZ,IAAK,IAAK,IACV,KAAM,KAAM,Q,WCrBRU,EAAQ,CACZC,WAAY,YACZC,OAAQ,qBACRC,SAAU,QACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASIC,EANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACb,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SACGD,KCVCR,EAAQ,CACZE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAUDC,EAPD,SAAC,GAAD,IAAEzB,EAAF,EAAEA,QAASkB,EAAX,EAAWA,QAAX,OACZ,qBAAKT,MAAOA,EAAZ,SACGT,EAAQ0B,KAAI,SAACC,EAAQzB,GAAT,OACX,cAAC,EAAD,CAAgBe,MAAOU,EAAQT,QAAS,kBAAMA,EAAQhB,KAAzCA,SCZbO,EAAQ,CACZW,MAAO,QACPE,OAAQ,aAoDKM,EAjDF,WACX,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAASvC,EAAgBiC,EAAQE,IA6BvC,OACE,gCACE,cAAC,EAAD,CAAOlC,QAASgC,EAAQE,GAAahB,QA7BrB,SAAChB,GACnB,IAAMqC,EAAgBP,EAAQQ,MAAM,EAAGN,EAAa,GAC9CO,EAAUF,EAAcL,GACxBlC,EAAO,YAAOyC,GAChBH,GAAUtC,EAAQE,KACtBF,EAAQE,GAAKkC,EAAU,IAAM,IAC7BH,EAAW,GAAD,mBAAKM,GAAL,CAAoBvC,KAC9BmC,EAAcI,EAAcpC,QAC5BkC,GAAYD,OAsBV,qBAAK3B,MAAOA,EAAZ,SACE,8BACG6B,EACG,WAAaA,EACb,iBAAmBF,EAAU,IAAM,KAlB7CJ,EAAQN,KAAI,SAACgB,EAAOC,GAClB,IAAMC,EAAcD,EAAI,qBAAiBA,GAAS,cAClD,OACE,6BACE,wBAAQzB,QAAS,kBATvBiB,EADcU,EAUsBF,QARpCN,EAAWQ,EAAO,IAAM,GAFX,IAACA,GAUR,SACGD,KAFID,eC9BFG,EAFH,kBAAM,cAAC,EAAD,KCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b5d6ee7.chunk.js","sourcesContent":["export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2], \r\n    [3, 4, 5], \r\n    [6, 7, 8], \r\n    [0, 3, 6], \r\n    [1, 4, 7], \r\n    [2, 5, 8], \r\n    [0, 4, 8], \r\n    [2, 4, 6], \r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst squares = [\r\n  null, null, null,\r\n  'x', 'x', 'o',\r\n  null, null, null\r\n];\r\n\r\nconsole.log(calculateWinner(squares));","import React from 'react';\r\n\r\nconst style = {\r\n  background: 'lightblue',\r\n  border: '2px solid darkblue',\r\n  fontSize: ' 30px',\r\n  fontWeight: '900',\r\n  cursor: 'pointer',\r\n  outline: 'none'\r\n}\r\n\r\nconst Square = ({value, onClick}) => (\r\n  <button style={style} onClick={onClick}>\r\n    {value}\r\n  </button>\r\n)\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst style = {\r\n  border: '3px solid darkblue',\r\n  borderRadius: ' 4px',\r\n  width: '250px',\r\n  height: '250px',\r\n  margin: '0 auto',\r\n  display: 'grid',\r\n  gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\r\n}\r\n\r\nconst Board = ({squares, onClick}) => (\r\n  <div style={style}>\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\nexport default Board;\r\n","import React, { useState } from 'react';\r\nimport { calculateWinner } from '../helpers';\r\nimport Board from './Board';\r\n\r\nconst style = {\r\n  width: '200px',\r\n  margin: '20px auto',\r\n};\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const winner = calculateWinner(history[stepNumber]);\r\n\r\n  const handleClick = (i) => {\r\n    const timeInHistory = history.slice(0, stepNumber + 1);\r\n    const current = timeInHistory[stepNumber];\r\n    const squares = [...current];\r\n    if (winner || squares[i]) return;\r\n    squares[i] = xIsNext ? 'x' : 'o';\r\n    setHistory([...timeInHistory, squares]);\r\n    setStepNumber(timeInHistory.length);\r\n    setXIsNext(!xIsNext);\r\n  };\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXIsNext(step % 2 === 0);\r\n  };\r\n\r\n  const renderMoves = () =>\r\n    history.map((_step, move) => {\r\n      const destination = move ? `Go to move ${move}` : 'Go to start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>\r\n            {destination}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <Board squares={history[stepNumber]} onClick={handleClick} />\r\n      <div style={style}>\r\n        <p >\r\n          {winner\r\n            ? 'Winner: ' + winner\r\n            : 'Next Player: ' + (xIsNext ? 'x' : 'o')}\r\n          {renderMoves()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport Game from './components/Game';\n\nconst App = () => <Game />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}